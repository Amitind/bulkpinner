/* Bulk Pinner - Create multiple pins in your Pinterest boards at once
 * Copyright (C) 2017 Luke Denton
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

.action-button {
  @include button-default('small');
  white-space: nowrap;
  padding-left: 30px;

  // The following is required before the Balloon.css library isn't working properly for the tooltip on this particular button
  &::before {
    top: -7px
  }

  &::after {
    top: -33px;
    left: 0;
  }

  + .action-button {
    @media (min-width: $mobileBreakpoint) {
      margin-left: 10px;
    }
  }

  &.action-menu-toggle {
    @media (max-width: $mobileBreakpoint) {
      font-size: 0;
      padding: 8px;

      .icon {
        position: inherit;
        transform: none;
      }
    }

    @media (min-width: $mobileBreakpoint) {
      display: none;
    }
  }

  &:nth-child(n + 2) {
    opacity: 0;
    transform: translateY(-10px);
    pointer-events: none;
    position: absolute;
    display: block;
    z-index: 10;

    @media (min-width: $mobileBreakpoint) {
      opacity: 1;
      transform: translateY(0);
      pointer-events: all;
      position: static;
      display: inline-block;
    }
  }

  .action-buttons.show-menu & {
    opacity: 1;
    transform: translateY(0);
    transition: all 100ms linear;
    pointer-events: all;

    @for $i from 1 through 3 {
      &:nth-child(#{$i+1}) {
        top: 35px * $i;
      }
      &:nth-child(#{$i+2}) {
        transition-delay: 50ms * $i;
      }
    }
  }

  .icon {
    position: absolute;
    top: 50%;
    left: 10px;
    transform: translateY(calc(-50% - 1px));
    display: inline-block;

    &::before {
      content: '';
      display: block;
      width: 15px;
      height: 15px;
    }
  }
}

.action-menu-toggle {
  .icon {
    &::before {
      background: svg-icon(icon-navigation-menu($colour-black));
    }
  }
}

.refresh-boards {
  .icon {
    &::before {
      background: svg-icon(icon-refresh($colour-black));
      transition: transform ease 200ms;
    }
  }

  &:hover {
    .icon {
      &::before {
        transform: rotate(90deg);
        transition: transform ease 200ms;
      }
    }
  }

  &:active {
    .icon {
      &::before {
        transform: rotate(359deg);
        transition: transform ease 500ms;
      }
    }
  }
}

.clear-completed {
  .icon {
    transition: transform ease 200ms;

    &::before {
      background: svg-icon(icon-close-line($colour-black));
    }
  }

  &:hover {
    .icon {
      transform: translateY(calc(-50% - 1px)) scale(1.5);
      transition: transform ease 200ms;
    }
  }
}

.clear-all {
  .icon {
    transition: transform ease 200ms;

    &::before {
      background: svg-icon(icon-close($colour-black));
    }
  }

  &:hover {
    .icon {
      transform: translateY(calc(-50% - 1px)) scale(1.5);
      transition: transform ease 200ms;
    }
  }
}
